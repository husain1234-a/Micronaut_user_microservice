plugins {
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("io.micronaut.application") version "4.3.2"
    id("io.micronaut.aot") version "4.2.1"
}

version = "0.1"
group = "com.yash"

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.openapi:micronaut-openapi")
    annotationProcessor("io.micronaut.validation:micronaut-validation-processor")
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    annotationProcessor("io.micronaut.serde:micronaut-serde-processor")
    annotationProcessor("io.micronaut.security:micronaut-security-annotations")
    
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("io.micronaut.validation:micronaut-validation")
    implementation("io.swagger.core.v3:swagger-annotations")
    implementation("jakarta.annotation:jakarta.annotation-api")
    implementation("io.micronaut.openapi:micronaut-openapi")
    implementation("jakarta.validation:jakarta.validation-api:3.0.2")
    implementation("org.hibernate.validator:hibernate-validator:8.0.1.Final")
    implementation("io.micronaut.data:micronaut-data-jdbc")
    implementation("jakarta.transaction:jakarta.transaction-api:1.3.3")
    implementation("io.micronaut.data:micronaut-data-model")
    implementation("io.micronaut.data:micronaut-data-runtime")
    implementation("io.micronaut.data:micronaut-data-tx")
    implementation("io.micronaut.serde:micronaut-serde-jackson")
    implementation("io.micronaut.serde:micronaut-serde-api")
    
    // Security dependencies
    implementation("io.micronaut.security:micronaut-security")
    implementation("io.micronaut.security:micronaut-security-jwt")
    implementation("io.micronaut.security:micronaut-security-annotations")
    
    // DynamoDB dependencies
    implementation("io.micronaut.aws:micronaut-aws-sdk-v2")
    implementation("io.micronaut.aws:micronaut-aws-parameter-store")
    implementation("software.amazon.awssdk:dynamodb-enhanced:2.20.162")
    implementation("software.amazon.awssdk:dynamodb:2.20.162")

    // Email dependencies
    implementation("io.micronaut.email:micronaut-email-template:1.4.0")
    implementation("com.sendgrid:sendgrid-java:4.9.0")

    // Gemini dependencies
    implementation("io.micronaut:micronaut-http-client")
    implementation("com.fasterxml.jackson.core:jackson-databind")

    // Firebase Admin SDK dependency
    implementation("com.google.firebase:firebase-admin:9.2.0")

    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly('org.postgresql:postgresql:42.7.2')
    
    testImplementation("io.micronaut:micronaut-http-client")
    implementation 'io.projectreactor:reactor-core:3.5.11'
    implementation("io.micronaut:micronaut-websocket:4.9.4")
}

application {
    mainClass.set("com.yash.Application")
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

graalvmNative.toolchainDetection = false

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.yash.*")
    }
    aot {
        optimizeServiceLoading = false
        convertYamlToJava = false
        precomputeOperations = true
        cacheEnvironment = true
        optimizeClassLoading = true
        deduceEnvironment = true
        optimizeNetty = true
    }
}



